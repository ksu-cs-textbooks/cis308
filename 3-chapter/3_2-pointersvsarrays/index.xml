<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pointers vs. Arrays :: CIS 308 Textbook</title><link>https://textbooks.cs.ksu.edu/cis308/3-chapter/3_2-pointersvsarrays/</link><description>Arrays and pointers have a lot in common. When we do:
int nums[10];Then we get a spot in memory that looks like this:
But what is nums? It is actually a constant pointer to the first spot in the array, nums[0]. So really, the picture looks like this:
So, &amp;nums[0] (the address of the first element in the array) is the same thing as nums.
Pointer Notation Because pointers and arrays are essentially the same thing (except array addresses cannot be changed), we can also access elements in an array by treating it as a pointer.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis308/3-chapter/3_2-pointersvsarrays/index.xml" rel="self" type="application/rss+xml"/></channel></rss>